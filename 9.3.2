-- 1. Create STUDENT table
CREATE TABLE STUDENT (
  student_id NUMBER PRIMARY KEY,
  student_name VARCHAR2(100),
  marks NUMBER
);

-- 2. Create GRADES table
CREATE TABLE GRADES (
  student_id NUMBER PRIMARY KEY,
  student_name VARCHAR2(100),
  marks NUMBER,
  grade CHAR(1)
);

-- 3. Create RESULTS table
CREATE TABLE RESULTS (
  student_id NUMBER,
  student_name VARCHAR2(100),
  subject_name VARCHAR2(100),
  marks NUMBER
);

-- 4. Create LOWSCORES table
CREATE TABLE LOWSCORES (
  log_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  student_id NUMBER,
  student_name VARCHAR2(100),
  subject_name VARCHAR2(100),
  marks NUMBER
);

-- 5. Stored Procedure to calculate and insert grades from STUDENT table into GRADES table
CREATE OR REPLACE PROCEDURE CalculateAndInsertGrades AS
BEGIN
  FOR rec IN (SELECT student_id, student_name, marks FROM STUDENT) LOOP
    DECLARE
      v_grade CHAR(1);
    BEGIN
      IF rec.marks >= 90 THEN
        v_grade := 'A';
      ELSIF rec.marks >= 80 THEN
        v_grade := 'B';
      ELSIF rec.marks >= 70 THEN
        v_grade := 'C';
      ELSIF rec.marks >= 60 THEN
        v_grade := 'D';
      ELSE
        v_grade := 'F';
      END IF;

      INSERT INTO GRADES (student_id, student_name, marks, grade)
      VALUES (rec.student_id, rec.student_name, rec.marks, v_grade);
    END;
  END LOOP;
  COMMIT;
END CalculateAndInsertGrades;
/

-- 6. Trigger to log low scores (marks < 40) from RESULTS table into LOWSCORES table
CREATE OR REPLACE TRIGGER trg_log_lowscores
AFTER INSERT OR UPDATE ON RESULTS
FOR EACH ROW
BEGIN
  IF :NEW.marks < 40 THEN
    INSERT INTO LOWSCORES (student_id, student_name, subject_name, marks)
    VALUES (:NEW.student_id, :NEW.student_name, :NEW.subject_name, :NEW.marks);
  END IF;
END;
/

-- 7. Insert test data into STUDENT
INSERT INTO STUDENT (student_id, student_name, marks) VALUES (1, 'Alice', 95);
INSERT INTO STUDENT (student_id, student_name, marks) VALUES (2, 'Bob', 88);
INSERT INTO STUDENT (student_id, student_name, marks) VALUES (3, 'Charlie', 73);
INSERT INTO STUDENT (student_id, student_name, marks) VALUES (4, 'David', 59);
INSERT INTO STUDENT (student_id, student_name, marks) VALUES (5, 'Eve', 40);
INSERT INTO STUDENT (student_id, student_name, marks) VALUES (6, 'Frank', 65);
INSERT INTO STUDENT (student_id, student_name, marks) VALUES (7, 'Grace', 78);
INSERT INTO STUDENT (student_id, student_name, marks) VALUES (8, 'Hannah', 90);
INSERT INTO STUDENT (student_id, student_name, marks) VALUES (9, 'Ian', 55);
INSERT INTO STUDENT (student_id, student_name, marks) VALUES (10, 'Jack', 82);

-- 8. Insert test data into RESULTS
INSERT INTO RESULTS (student_id, student_name, subject_name, marks) VALUES (1, 'Ravi', 'Math', 85);
INSERT INTO RESULTS (student_id, student_name, subject_name, marks) VALUES (2, 'Priya', 'Science', 72);
INSERT INTO RESULTS (student_id, student_name, subject_name, marks) VALUES (3, 'Kiran', 'English', 38);
INSERT INTO RESULTS (student_id, student_name, subject_name, marks) VALUES (4, 'Sneha', 'Math', 95);
INSERT INTO RESULTS (student_id, student_name, subject_name, marks) VALUES (5, 'Arjun', 'Science', 29);
INSERT INTO RESULTS (student_id, student_name, subject_name, marks) VALUES (6, 'Meena', 'English', 41);
INSERT INTO RESULTS (student_id, student_name, subject_name, marks) VALUES (7, 'Rahul', 'Math', 60);
INSERT INTO RESULTS (student_id, student_name, subject_name, marks) VALUES (8, 'Divya', 'Science', 33);
INSERT INTO RESULTS (student_id, student_name, subject_name, marks) VALUES (9, 'Vikram', 'English', 55);
INSERT INTO RESULTS (student_id, student_name, subject_name, marks) VALUES (10, 'Riya', 'Math', 18);

COMMIT;

-- 9. Call the grade calculation procedure
BEGIN
  CalculateAndInsertGrades;
END;
/

-- 10. To verify LOWSCORES table contains only students with marks < 40
SELECT * FROM LOWSCORES;
